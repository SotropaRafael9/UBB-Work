     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;a,b,c,d-byte, e,f,g,h-word
    15                                      ;a*d*e/(f-5)
    16 00000000 05                          a db 5
    17 00000001 0A                          d db 10
    18 00000002 0400                        e dw 4
    19 00000004 0600                        f dw 6
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[00000000]                  mov ax, [a]
    25 00000006 668B1D[01000000]                mov bx, [d]
    26 0000000D 66F7E3                          mul bx ; 50:16=32h
    27 00000010 668B15[02000000]                mov dx, [e]
    28 00000017 66F7E2                          mul dx; 200 : 16 =C8
    29 0000001A 8B0D[04000000]                  mov ecx, [f]
    30 00000020 83E905                          sub ecx, 5
    31 00000023 F7F1                            div ecx
    32                                          
    33                                          ; exit(0)
    34 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
