     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00                          n db 0
    17 00000001 6E203D2000                  message db "n = ", 0
    18 00000006 256400                      format db "%d",0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 68[01000000]                    push dword message
    24 00000005 FF15[00000000]                  call [printf]
    25 0000000B 83C404                          add esp, 4 * 1
    26                                          
    27 0000000E 68[01000000]                    push dword message
    28 00000013 68[06000000]                    push dword format
    29 00000018 FF15[00000000]                  call [scanf]
    30 0000001E 83C408                          add esp, 4*2
    31                                          ; exit(0)
    32 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
