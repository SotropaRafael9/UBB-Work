     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 4C4C                        a dw 0100110001001100b
    15 00000002 ABAA                        b dw 1010101010101011b
    16 00000004 0F0F                        c dw 0000111100001111b
    17 00000006 0000                        d dw 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          
    23                                          ;izolate bits(1-5) and save them in bx
    24 00000000 66A1[00000000]                  mov ax, [a]
    25 00000006 66D1E8                          shr ax, 1
    26 00000009 6683E01F                        and ax, 0000000000011111b 
    27 0000000D 6689C3                          mov bx, ax ; 10
    28                                          
    29                                          ;load word B in ax the bits(6-10)
    30 00000010 66A1[02000000]                  mov ax, [b]
    31 00000016 66C1E806                        shr ax, 6
    32 0000001A 6683E01F                        and ax, 0000000000011111b
    33 0000001E 6601C3                          add bx, ax ;
    34                                          
    35                                          ;same for C (11-15)
    36 00000021 66A1[04000000]                  mov ax, [c]
    37 00000027 66C1E80B                        shr ax, 11
    38 0000002B 6683E01F                        and ax, 0000000000011111b
    39 0000002F 6601C3                          add bx, ax
    40                                          
    41                                          
    42                                          
    43 00000032 66891D[06000000]                mov [d], bx
    44                                          
    45                                          
    46                                          
    47                                          ; exit(0)
    48 00000039 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    49 0000003B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
