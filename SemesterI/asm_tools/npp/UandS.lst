     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 14                          a db 20
    15 00000001 14                          b db 20
    16 00000002 03                          c db 3
    17 00000003 05000000                    e dd 5
    18 00000007 2C01000000000000            x dq 300
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;x-(a*b*25+c*3)/(a+b)+e
    24 00000000 A0[00000000]                    mov al, [a]
    25 00000005 8A1D[01000000]                  mov bl, [b]
    26 0000000B F6E3                            mul bl
    27 0000000D 66BB1900                        mov bx, 25
    28 00000011 66F7E3                          mul bx
    29 00000014 8A0D[02000000]                  mov cl, [c]
    30 0000001A B203                            mov dl, 3
    31 0000001C F6E2                            mul dl
    32 0000001E 50                              push eax
    33 0000001F 6658                            pop ax
    34 00000021 665A                            pop dx
    35 00000023 6601C8                          add ax,cx
    36 00000026 6683D200                        adc dx,0
    37 0000002A 6650                            push ax
    38 0000002C 6652                            push dx
    39 0000002E 58                              pop eax
    40 0000002F 8A1D[00000000]                  mov bl, [a]
    41 00000035 8A0D[01000000]                  mov cl, [b]
    42 0000003B 00CB                            add bl,cl
    43 0000003D B700                            mov bh, 0
    44                                          ;adc bh,0
    45 0000003F 66F7F3                          div bx
    46 00000042 8B0D[07000000]                  mov ecx, [x]
    47 00000048 8B15[0B000000]                  mov edx, [x+4]
    48 0000004E 6629C1                          sub cx, ax
    49 00000051 030D[03000000]                  add ecx, [e]
    50 00000057 83D200                          adc edx, 0
    51                                          
    52                                          
    53                                          ; exit(0)
    54 0000005A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    55 0000005C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
