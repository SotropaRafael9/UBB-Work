     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01                          a db 1 
    15 00000001 0300                        b dw 3  
    16 00000003 0A000000                    c dd 10
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21                                          ; a - byte, b - word, c - double word, d - quad word
    22 00000000 B800000000                      mov eax, 0 ; curatam eax
    23 00000005 A0[00000000]                    mov al, [a] 
    24 0000000A 0305[03000000]                  add eax, [c] ; eax = c
    25                                          
    26 00000010 66A1[01000000]                  mov ax, [b] ;ax= b
    27 00000016 0205[00000000]                  add al, [a] ;al=a
    28 0000001C 80D400                          adc ah, 0 ;golim jumatatea 
    29 0000001F 0305[03000000]                  add eax, [c]  ;eax=(c+a)+      
    30 00000025 50                              push eax
    31 00000026 6658                            pop ax
    32 00000028 665A                            pop dx
    33 0000002A 660305[01000000]                add ax,[b]
    34 00000031 6683D200                        adc dx, 0
    35 00000035 6652                            push dx
    36 00000037 6650                            push ax
    37 00000039 58                              pop eax
    38 0000003A 0205[00000000]                  add al, [a]
    39 00000040 80D400                          adc ah, 0
    40                                          
    41                                          
    42                                          
    43                                          ; c + a + b + b + a   
    44                                          ; exit(0)
    45 00000043 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000045 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
