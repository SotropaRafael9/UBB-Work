bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start        

; declare external functions needed by our program
extern exit               ; tell nasm that exit exists even if we won't be defining it
import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions

; our data is declared here (the variables needed by our program)
segment data use32 class=data
    ; ...
    a db 1
    b dw 2
    c dd 10
    d dq 3

; our code starts here
segment code use32 class=code
    start:
        ; ...
        ;c-(a+d)+(b+d)
        mov eax, 0
        mov edx, 0
        mov al, [a] ; al = a
        mov ebx, [d] 
        mov ecx, [d+4] ;ebx,ecx = d
        
        clc ; clear CF
        add eax, ebx ;a+d
        adc edx, ecx ;[a]+[d+4]
        
        mov ecx, 0
        mov ecx, [c]
        sub ecx, eax ; c-(a+d)
        
        
        
        mov ecx, 0
        mov ebx, 0
        
        mov bx, [b]
        
        add
        
        
        
        
        
        
        
        
        
        ; exit(0)
        push    dword 0      ; push the parameter for exit onto the stack
        call    [exit]       ; call exit to terminate the program
