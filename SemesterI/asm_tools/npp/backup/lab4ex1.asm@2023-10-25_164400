bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start        

; declare external functions needed by our program
extern exit               ; tell nasm that exit exists even if we won't be defining it
import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions

; our data is declared here (the variables needed by our program)
segment data use32 class=data
    ; ...
    a dw 0101011101010011b
	b dw 1001101110111110b
	c dd 0
; our code starts here
segment code use32 class=code
    start:
        ;...
        ; Given the words A and B, compute the doubleword C as follows:
        ; the bits 0-2 of C are the same as the bits 12-14 of A
        ; the bits 3-8 of C are the same as the bits 0-5 of B
        ; the bits 9-15 of C are the same as the bits 3-9 of A
        ; the bits 16-31 of C are the same as the bits of A
        mov ax, 0
        mov ax, [a]
        shr ax, 1
        shl ax, 13
        or word[c], ax
        

        
        mov word[c], ax
        
        mov ebx, 0
        mov bx, [b]
        shl ebx, 24
        shr ebx, 20
        mov dword[c], ebx
        
        mov eax, 0
        mov ax,[a]
        shl eax, 15
        shr eax, 11
        
        
        
        ; exit(0)
        push    dword 0      ; push the parameter for exit onto the stack
        call    [exit]       ; call exit to terminate the program
