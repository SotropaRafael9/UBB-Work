     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ; c-(a+d)+(b+d)
    15 00000000 03                          a db 3
    16 00000001 0A00                        b dw 10
    17 00000003 14000000                    c dd 20
    18 00000007 0100000000000000            d dq 1h
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          
    24 00000000 A1[00000000]                    mov eax, [a]
    25 00000005 B800000000                      mov eax, 0
    26                                          
    27                                          
    28 0000000A 8B1D[01000000]                  mov ebx, [b]
    29 00000010 BB00000000                      mov ebx, 0
    30                                          
    31 00000015 8B0D[03000000]                  mov ecx, [c]
    32 0000001B B900000000                      mov ecx, 0
    33                                          
    34                                          
    35 00000020 8B15[07000000]                  mov edx, [d]
    36 00000026 BA00000000                      mov edx, 0
    37                                          
    38                                          
    39 0000002B 01D0                            add eax, edx
    40                                          
    41                                          ; exit(0)
    42 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
