     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0B000000                    a dd 11
    15 00000004 04                          b db 4
    16 00000005 0200                        c dw 2
    17 00000007 0100000000000000            x dq 1
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;(a+b/c-1)/(b+2)-x = (11+4/2-1)/(4+2)-1 = 12 /6 -1
    23                                          
    24 00000000 A0[04000000]                    mov al, [b]
    25 00000005 6698                            cbw
    26 00000007 668B1D[05000000]                mov bx, [c]
    27 0000000E F6FB                            idiv bl ; 4/2
    28                                          
    29                                          
    30 00000010 8B0D[00000000]                  mov ecx, [a]
    31 00000016 01C8                            add eax, ecx
    32 00000018 83E801                          sub eax, 1 ;eax = 12
    33                                          
    34 0000001B 89C1                            mov ecx, eax
    35 0000001D A0[04000000]                    mov al, [b]
    36 00000022 6698                            cbw
    37 00000024 98                              cwde
    38 00000025 83C002                          add eax, 2
    39                                          
    40                                          
    41 00000028 89C3                            mov ebx, eax
    42 0000002A 89C8                            mov eax, ecx
    43 0000002C 66F7FB                          idiv bx
    44                                          
    45 0000002F 8B1D[07000000]                  mov ebx, [x]
    46 00000035 8B0D[0B000000]                  mov ecx, [x+4]
    47                                          
    48 0000003B 29D8                            sub eax, ebx
    49 0000003D 19CA                            sbb edx, ecx
    50                                          ; exit(0)
    51 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
