     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;a+a-b-c-(d+d)
    15 00000000 0700                        a dw 7
    16 00000002 0200                        b dw 2
    17 00000004 0100                        c dw 1
    18 00000006 0300                        d dw 3
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 66A1[00000000]                  mov ax, [a]
    24 00000006 668B1D[00000000]                mov bx, [a]
    25 0000000D 6601D8                          add ax, bx ; a+a
    26 00000010 668B0D[02000000]                mov cx, [b]
    27 00000017 6629C8                          sub ax, cx ;a+a-b
    28 0000001A 668B15[04000000]                mov dx, [c]
    29 00000021 6629D0                          sub ax, dx 
    30 00000024 66BB0000                        mov bx, 0
    31 00000028 66B90000                        mov cx, 0
    32 0000002C 668B1D[06000000]                mov bx, [d]
    33 00000033 668B0D[06000000]                mov cx, [d]
    34 0000003A 6601CB                          add bx, cx
    35 0000003D 6629D8                          sub ax, bx
    36                                          
    37                                          
    38                                      
    39                                          ; exit(0)
    40 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
