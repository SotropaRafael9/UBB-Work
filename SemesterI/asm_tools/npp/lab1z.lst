     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;(d+d-b)+(c-a)+d
    15 00000000 02                          a db 2
    16 00000001 05                          b db 5
    17 00000002 04                          c db 4
    18 00000003 03                          d db 3
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 B800000000                      mov eax, 0
    25 00000005 A0[03000000]                    mov al, [d]
    26 0000000A 8A1D[03000000]                  mov bl, [d] ; d = 1
    27 00000010 00D8                            add al, bl ; al = 1+1
    28 00000012 8A25[01000000]                  mov ah, [b] ; ah = b
    29 00000018 28E0                            sub al, ah ; al = (d+d)-b
    30 0000001A 8A0D[02000000]                  mov cl, [c] ; cl = c
    31 00000020 8A2D[00000000]                  mov ch, [a] ;ch= a
    32 00000026 28E9                            sub cl, ch ; c-a
    33 00000028 00C8                            add al, cl ; ((d+d)-b) + (c-a) 
    34 0000002A 00D8                            add al, bl
    35                                          ; exit(0)
    36 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
