     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07563412153C2B1A            s dd 12345607h, 1A2B3C15h
    15                                      l equ $-s
    16 00000008 <res 00000008>              d RESB l
    17                                      
    18                                      ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 BE[00000000]                    mov esi, s
    23 00000005 BF[08000000]                    mov edi, d
    24 0000000A B908000000                      mov ecx, l
    25                                          
    26 0000000F E31A                            jecxz end
    27                                          loop_1:
    28 00000011 8A06                                mov AL, [ESI]
    29 00000013 89F3                                mov EBX, ESI
    30 00000015 51                                  push ecx
    31 00000016 56                                  push ESI
    32                                              loop_2:
    33 00000017 46                                      INC esi
    34 00000018 8A26                                    mov AH, [ESI]
    35 0000001A 38E0                                    cmp AL, AH
    36 0000001C 7F06                                    jg continue
    37 0000001E 8823                                    mov [EBX], AH
    38 00000020 8806                                    mov [ESI], AL
    39 00000022 88E0                                    mov AL, AH
    40                                                  continue:
    41 00000024 E2F1                                loop loop_2
    42 00000026 5E                                  pop ESI
    43 00000027 59                                  pop ECX
    44 00000028 46                                  inc ESI
    45                                                  
    46 00000029 E2E6                            loop loop_1
    47                                          end:  
    48                                          
    49                                          ; exit(0)
    50 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
