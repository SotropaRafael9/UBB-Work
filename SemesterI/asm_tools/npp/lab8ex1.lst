     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import fread msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import fclose msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 696E7075742E747874-         file_name db "input.txt", 0 
    17 00000009 00                 
    18 0000000A 6F75747075742E7478-         file_name2 db "output.txt", 0 
    18 00000013 7400               
    19 00000015 612B00                      access_mode db "a+", 0
    20                                      
    21 00000018 FFFFFFFF                    file_descriptor dd -1
    22                                      
    23 0000001C 00000000                    nr_citite dd 0
    24                                      len equ 100
    25 00000020 <res 00000064>              buffer resb len 
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; ...
    31                                          ;open the file
    32 00000000 68[15000000]                    push dword access_mode
    33 00000005 68[00000000]                    push dword file_name
    34 0000000A FF15[00000000]                  call [fopen]
    35 00000010 83C408                          add esp, 2* 4
    36                                                  
    37                                          ;check if it s smth in the file
    38 00000013 83F800                          cmp eax, 0
    39 00000016 743A                            je final
    40                                          ;move the file descirptor to eax
    41 00000018 A3[18000000]                    mov [file_descriptor], eax
    42 0000001D 89C3                            mov ebx, eax
    43                                          
    44                                          bucla:
    45                                              ;read 100 characters 
    46 0000001F FF35[18000000]                      push dword [file_descriptor]
    47 00000025 6A64                                push dword len
    48 00000027 6A01                                push dword 1
    49 00000029 68[20000000]                        push dword buffer
    50 0000002E FF15[00000000]                      call [fread]
    51 00000034 83C410                              add esp, 4 * 4
    52                                              
    53 00000037 83F800                              cmp eax, 0
    54 0000003A 7407                                je end1
    55                                              
    56 0000003C A3[1C000000]                        mov [nr_citite], eax
    57                                              
    58 00000041 EBDC                                jmp bucla
    59                                              
    60                                          
    61                                          end1:
    62 00000043 FF35[18000000]                  push dword [file_descriptor]
    63 00000049 FF15[00000000]                  call [fclose]
    64 0000004F 83C404                          add esp, 4
    65                                              
    66                                              
    67                                              
    68                                          
    69                                          
    70                                          
    71                                          final:
    72                                          
    73                                          ; exit(0)
    74 00000052 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    75 00000054 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
