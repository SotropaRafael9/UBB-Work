     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a db 3
    15 00000001 01                          b db 1
    16 00000002 04                          c db 4
    17 00000003 05                          d db 5 
    18                                      ;(5-2*(3-1)+1*4)/2
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov AL, [a]
    24 00000005 2A05[01000000]                  SUB AL, [b]
    25 0000000B B302                            mov BL, 2
    26 0000000D F6E3                            MUL BL
    27 0000000F 6689C1                          mov CX, AX 
    28 00000012 A0[01000000]                    mov AL, [b]
    29 00000017 8A15[03000000]                  mov DL, [d]
    30 0000001D F6E2                            MUL DL
    31 0000001F 66A1[03000000]                  mov AX, [d]
    32 00000025 6629C8                          SUB AX, CX
    33 00000028 66BB0200                        mov BX, 2
    34 0000002C F6F3                            DIV BL
    35                                          
    36                                          ; exit(0)
    37 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
