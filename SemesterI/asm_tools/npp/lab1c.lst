     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;[100-10*a+4*(b+c)]-d = 100-70+12 = 42-3 = 39  = 0010 0111 = 27
    15 00000000 07                          a db 7
    16 00000001 01                          b db 1
    17 00000002 02                          c db 2
    18 00000003 0300                        d dw 3
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[01000000]                    mov al, [b]
    24 00000005 8A25[02000000]                  mov ah, [c]
    25 0000000B 00E0                            add al, ah ; b+c
    26 0000000D B304                            mov bl, 4
    27 0000000F F6E3                            mul bl
    28                                          
    29 00000011 6689C2                          mov dx, ax
    30                                          
    31 00000014 B000                            mov al, 0
    32 00000016 A0[00000000]                    mov al, [a]
    33 0000001B B10A                            mov cl, 10
    34 0000001D F6E1                            mul cl ; ax=a*10
    35                                          
    36 0000001F 66BB0000                        mov bx, 0
    37 00000023 66BB6400                        mov bx, 100
    38 00000027 6629C3                          sub bx, ax
    39                                          
    40 0000002A 6601D3                          add bx, dx
    41                                          
    42 0000002D 66B80000                        mov ax, 0
    43 00000031 66A1[03000000]                  mov ax, [d]
    44                                          
    45 00000037 6629C3                          sub bx,ax
    46                                          
    47                                          
    48                                          
    49                                          
    50                                          
    51                                          ; exit(0)
    52 0000003A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    53 0000003C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
